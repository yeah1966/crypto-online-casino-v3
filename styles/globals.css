"use client";

import React, { useRef, useImperativeHandle, forwardRef } from "react";
import Image from "next/image";

export type WheelRef = {
  spin: () => void;
};

const slices = [
  "/spin/bitstarz.png",
  "/spin/wildvegas.png",
  "/spin/7bit.png",
  "/spin/cloudbet.png",
  "/spin/cryptoloko.png",
  "/spin/dreams.png",
  "/spin/betzard.png",
  "/spin/prismcasino.png",
  "/spin/slotsofvegas.png",
  "/spin/coinpoker.png",
];

const WheelOfFortune = forwardRef<WheelRef>((_, ref) => {
  const wheelRef = useRef<HTMLDivElement>(null);
  const audioRef = useRef<HTMLAudioElement>(null);

  useImperativeHandle(ref, () => ({
    spin: () => {
      const wheel = wheelRef.current;
      const audio = audioRef.current;
      if (wheel && audio) {
        const extraSpins = 5;
        const randomSlice = Math.floor(Math.random() * slices.length);
        const sliceDegree = 360 / slices.length;
        const randomRotation =
          360 * extraSpins + randomSlice * sliceDegree + sliceDegree / 2;
        wheel.style.transition = "transform 5s ease-out";
        wheel.style.transform = `rotate(${randomRotation}deg)`;
        audio.currentTime = 0;
        audio.play();
      }
    },
  }));

  return (
    <div className="flex flex-col items-center justify-center py-8">
      {/* Geluid voor spin */}
      <audio ref={audioRef} src="/sounds/reel-spin.mp3" preload="auto" />
      {/* Wieldisplay */}
      <div className="relative w-[300px] h-[300px] md:w-[400px] md:h-[400px] shadow-[0_0_20px_5px_gold] animate-pulse">
        <div
          ref={wheelRef}
          className="absolute inset-0 rounded-full"
          style={{
            backgroundImage: `conic-gradient(
              from 0deg,
              #facc15 0deg ${360 / slices.length}deg,
              #fb7185 ${360 / slices.length}deg ${2 * (360 / slices.length)}deg,
              #4ade80 ${2 * (360 / slices.length)}deg ${3 * (360 / slices.length)}deg,
              #60a5fa ${3 * (360 / slices.length)}deg ${4 * (360 / slices.length)}deg,
              #c084fc ${4 * (360 / slices.length)}deg ${5 * (360 / slices.length)}deg,
              #f87171 ${5 * (360 / slices.length)}deg ${6 * (360 / slices.length)}deg,
              #34d399 ${6 * (360 / slices.length)}deg ${7 * (360 / slices.length)}deg,
              #818cf8 ${7 * (360 / slices.length)}deg ${8 * (360 / slices.length)}deg,
              #fbbf24 ${8 * (360 / slices.length)}deg ${9 * (360 / slices.length)}deg,
              #a78bfa ${9 * (360 / slices.length)}deg 360deg
            )`,
          }}
        >
          {slices.map((slice, index) => (
            <div
              key={index}
              className="absolute left-1/2 top-1/2 w-10 h-10"
              style={{
                transform: `rotate(${index * (360 / slices.length)}deg) translate(120px) rotate(-${index * (360 / slices.length)}deg)`,
                transformOrigin: "0% 0%",
              }}
            >
              <Image
                src={slice}
                alt={`slice-${index}`}
                width={40}
                height={40}
                className="rounded-md object-contain drop-shadow-md"
              />
            </div>
          ))}
        </div>
      </div>
      {/* Pijl */}
      <div className="relative -mt-6">
        <div className="w-6 h-6 bg-yellow-400 rotate-45 transform"></div>
      </div>
    </div>
  );
});

WheelOfFortune.displayName = "WheelOfFortune";

export default WheelOfFortune;
